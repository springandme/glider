name: Build
on:
  push:
    branches:
      - 'master'
    tags:
      - '*'
  pull_request:

permissions:
  contents: write  # 允许创建releases和上传assets
  packages: write  # 如果需要发布到GitHub Packages
  pull-requests: read  # 读取PR信息

env:
  APP_NAME: glider
  PLATFORMS: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/riscv64

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Vars
        run: |
          echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version-file: 'go.mod'
          cache: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Test
        run: go test -v .

      - name: Run go vet
        run: go vet ./...

      - name: Run staticcheck
        uses: dominikh/staticcheck-action@v1.3.0
        with:
          version: "2023.1.6"

      - name: Build
        uses: goreleaser/goreleaser-action@v5
        if: "!startsWith(github.ref, 'refs/tags/')"
        with:
          version: latest
          args: build --snapshot --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifact - Linux amd64
        uses: actions/upload-artifact@v4
        if: "!startsWith(github.ref, 'refs/tags/')"
        with:
          name: ${{ env.APP_NAME }}-dev-${{ env.SHA_SHORT }}-linux-amd64
          path: |
            ./dist/default_linux_amd64_v1/${{ env.APP_NAME }}

      - name: Upload Artifact - Linux arm64
        uses: actions/upload-artifact@v4
        if: "!startsWith(github.ref, 'refs/tags/')"
        with:
          name: ${{ env.APP_NAME }}-dev-${{ env.SHA_SHORT }}-linux-arm64
          path: |
            ./dist/default_linux_arm64/${{ env.APP_NAME }}

      - name: Upload Artifact - Darwin arm64
        uses: actions/upload-artifact@v4
        if: "!startsWith(github.ref, 'refs/tags/')"
        with:
          name: ${{ env.APP_NAME }}-dev-${{ env.SHA_SHORT }}-darwin-arm64
          path: |
            ./dist/default_darwin_arm64/${{ env.APP_NAME }}

      - name: Upload Artifact - Windows amd64
        uses: actions/upload-artifact@v4
        if: "!startsWith(github.ref, 'refs/tags/')"
        with:
          name: ${{ env.APP_NAME }}-dev-${{ env.SHA_SHORT }}-windows-amd64
          path: |
            ./dist/default_windows_amd64_v1/${{ env.APP_NAME }}.exe

      - name: Release
        uses: goreleaser/goreleaser-action@v5
        if: startsWith(github.ref, 'refs/tags/')
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}